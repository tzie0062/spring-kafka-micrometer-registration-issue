---
services:
  zookeeper:
    image: "confluentinc/cp-zookeeper:${CONFLUENT_VERSION}"
    hostname: "${ZK_HOST_AND_CONTAINER_NAME}"
    container_name: "${ZK_HOST_AND_CONTAINER_NAME}"
    restart: on-failure
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: "confluentinc/cp-server:${CONFLUENT_VERSION}"
    hostname: "${BROKER_HOST_AND_CONTAINER_NAME}"
    container_name: "${BROKER_HOST_AND_CONTAINER_NAME}"
    restart: on-failure
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_ENABLE: 'false'

  schema_registry:
    image: "confluentinc/cp-schema-registry:${CONFLUENT_VERSION}"
    hostname: "${SR_HOST_AND_CONTAINER_NAME}"
    container_name: "${SR_HOST_AND_CONTAINER_NAME}"
    restart: on-failure
    depends_on:
      - broker
    ports:
      - "18081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema_registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'PLAINTEXT://broker:9092'
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_ORIGIN: '*'
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_METHODS: 'GET,POST,PUT,OPTIONS'
      SCHEMA_REGISTRY_SCHEMA_COMPATIBILITY_LEVEL: 'full'

  prometheus:
      image: prom/prometheus:${PROMETHEUS_VERSION}
      hostname: ${PROMETHEUS_HOST_AND_CONTAINER_NAME}
      container_name: ${PROMETHEUS_HOST_AND_CONTAINER_NAME}
      ports:
        - 9090:9090
      volumes:
        - .docker/prometheus.yml:/etc/prometheus/prometheus.yml

